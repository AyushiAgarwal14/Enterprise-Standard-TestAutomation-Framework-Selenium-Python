# Behave configuration related settings
[behave]
format = rerun
outfiles = rerun.txt
junit = true
junit_directory = TestResults/JunitReports
default_format = pretty
tags = @OSA_Objective_ADD

# Configuration for the application under test
[application]
#Provide environment value as dev/qa/stage/prod and the relevant url against the environment.
#The url variable in SeleniumBase class would be initialized with the corresponding url based on environment.
environment = qa
dev_url = https://hub.shell.com/
qa_url =  https://hub-resourceone-azuredev.shell.com/Alpha2/
stage_url = https://www.google.com/
prod_url = https://shell.service-now.com/sp

# Browser settings
[browser]
webdriver_manager = false
browser_name = chrome
remote = false
# [Remote Environments - Browserstack, lambdatest, Grid, Docker]
remote_environment = lambdatest

# Remote Configurations
[remote-options]
remote_url = http://127.0.0.1:52095/wd/hub
remote_browser = chrome
remote_platform = Linux

[browser-options]
headless = false
incognito = false
accept_cert = true
disable_extensions = true
disable_notifications = true
allow_insecure_content = true
disable_popup = true
#Change the download directory to the desired location - set the 'download_directory' to 'true'
download_directory= false
download_path=path

#if user is wanted to open the test scenario's in new profile, then change user_profile to true
user_profile = false
#pass the path upto user data in "path to directory"
path_to_directory = Path to the directory
# E.g : C:/Users/<Username>/AppData/Local/Microsoft/Edge/User Data/Default
browser_port = 9222

# Below configurations are used to run automation scripts on new testing chrome browser.
# It's works only for Chrome Browser
# binary_location: Location of the testing chrome browser.
# testing_browser_version: Provide the chrome testing browser version.

run_on_testing_browser = true
binary_location = C:\Users\Ayushi.Agarwal2\Downloads\chrome-win64\chrome-win64\chrome.exe
testing_browser_version = 127

[database]
#MYSQL Connection
host = hostname
user = username
password = password
database = databasename

#SQL Connection
driver= {SQL Server Native Client 11.0}
SQL_Server= servername
SQL_database= databasename
Trusted_Connection= yes
#If using Password authentication then change the server username and password or else keep it as "None"
sql_server_Username = username
sql_server_Password = None
#If using Azure authentication then change the authentication type
#['ActiveDirectoryInteractive' - for Azure Active directory with MFID']
authentication_type = ActiveDirectoryInteractive

[timeout]
implicit_wait = 10

# Update the Azure test plan results after the execution of the script. Set 'update_result' to 'true' to enable the feature
[Azure_Test_plan]
update_result = false
[azure_test_result]
filename = TestResult.json

[behave.formatters]
html-pretty = behave_html_pretty_formatter:PrettyHTMLFormatter
html = behave_html_formatter:HTMLFormatter
allure = allure_behave.formatter:AllureFormatter

